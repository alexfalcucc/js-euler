/**
 *
 * Project Euler Problem 2
 * =======================
 *
 * Each new term in the Fibonacci sequence is generated by adding the
 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 *                   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * Find the sum of all the even-valued terms in the sequence which do not
 * exceed four million.
 *
 */

var utils = require('../utils/reusables.js');

/**
 * link to reference: https://www.livescience.com/37470-fibonacci-sequence.html
 */

function fibonacci(n) {
  var fib_list = [1, 2];
  var i = 1;
  var next = 0;

  // by default we`ll add the first product of 2
  // since that it will not be in the list
  var sum_ = [2];

  while (next < 4000000) {
    next = fib_list[i] + fib_list[i-1]
    if (next % 2 == 0) {
      sum_.push(next);
    }
    fib_list.push(next);
    i+=1;
  }

  return sum_.reduce(utils.add, 0)
}


console.log(fibonacci(1000));
console.log(utils.show_answer('02'));
